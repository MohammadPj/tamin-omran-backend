
{"level":"info","message":"Connected to MongoDB..."}
{"level":"error","message":"Could not get genre Could not get genre","stack":"Error: Could not get genre\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:10:9\n    at Generator.next (<anonymous>)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:4:12)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:9:36\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:175:3)"}
{"level":"error","message":"Could not get genre Could not get genre","stack":"Error: Could not get genre\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:10:9\n    at Generator.next (<anonymous>)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:4:12)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:9:36\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:175:3)"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"error","message":"Could not get genre Could not get genre","stack":"Error: Could not get genre\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:10:9\n    at Generator.next (<anonymous>)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:4:12)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\src\\routes\\Genre.ts:9:36\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:144:13)\n    at Route.dispatch (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\route.js:114:3)\n    at newFn (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (F:\\Developer\\Code\\Practice\\Back End\\Node.js\\Mosh\\10-1-Authentication\\node_modules\\express\\lib\\router\\index.js:175:3)"}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"error","message":"connect ECONNREFUSED 127.0.0.1:27017 connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at NativeConnection.Connection.openUri (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\connection.js:825:32)\n    at F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\index.js:419:10\n    at F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:41:5\n    at new Promise (<anonymous>)\n    at promiseOrCallback (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:40:10)\n    at Mongoose._promiseOrCallback (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\index.js:1272:10)\n    at Mongoose.connect (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\mongoose\\lib\\index.js:418:20)\n    at module.exports (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\src\\startup\\db.ts:6:6)\n    at Object.<anonymous> (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\src\\index.ts:7:24)\n    at Module._compile (node:internal/modules/cjs/loader:1256:14)\n    at Module._compile (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\source-map-support\\source-map-support.js:568:25)\n    at Module.m._compile (C:\\Users\\Mohammad\\AppData\\Local\\Temp\\ts-node-dev-hook-5898175171017033.js:69:33)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1310:10)\n    at require.extensions..jsx.require.extensions..js (C:\\Users\\Mohammad\\AppData\\Local\\Temp\\ts-node-dev-hook-5898175171017033.js:114:20)\n    at require.extensions.<computed> (C:\\Users\\Mohammad\\AppData\\Local\\Temp\\ts-node-dev-hook-5898175171017033.js:71:20)\n    at Object.nodeDevHook [as .ts] (F:\\Developer\\Code\\Projects\\tamin-omran\\back-end\\node_modules\\ts-node-dev\\lib\\hook.js:63:13)"}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"listening to port 4000"}
{"level":"info","message":"Connected to MongoDB..."}
